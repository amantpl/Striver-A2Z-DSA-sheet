//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    int totalFruits(vector<int> &arr) {
        unordered_set<int> st;
        int l=0;
        int r=0;
        int maxlen=0;
        int n=arr.size();
        while(r<n){
            st.insert(arr[r]);
            if(st.size()<=2){
                maxlen=max(maxlen,r-l+1);
                r++;
            }else{
                st.clear();
                st.insert(arr[r]);
                l++;
                r=l;
            }
        }
        return maxlen;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore(); // To ignore any newline character left in the buffer
    while (t--) {
        string line;
        getline(cin, line); // Read the entire line of input
        stringstream ss(line);
        vector<int> arr;
        int num;

        // Parse the input line into integers and add to the vector
        while (ss >> num) {
            arr.push_back(num);
        }
        Solution ob;
        int ans = ob.totalFruits(arr);

        cout << ans << endl;
    }
    return 0;
}

// } Driver Code Ends