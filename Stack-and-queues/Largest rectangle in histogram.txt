class Solution {
public:
vector<int> nextsmaller(vector<int>& heights){
    int n=heights.size();
    vector<int> ans(n,-1);
    stack<int> st;
    for(int i=n-1;i>=0;i--){
        while(!st.empty() && heights[st.top()]>=heights[i]){
            st.pop();
        }
        if(!st.empty()){
            ans[i]=st.top();
        }
        st.push(i);
    }
    return ans;
}
vector<int> prevsmaller(vector<int>& heights){
    int n=heights.size();
    vector<int> ans(n,-1);
    stack<int> st;
    for(int i=0;i<n;i++){
        while(!st.empty() && heights[st.top()]>=heights[i]){
            st.pop();
        }
        if(!st.empty()){
            ans[i]=st.top();
        }
        st.push(i);
    }
    return ans;
}
    int largestRectangleArea(vector<int>& heights) {
        int maxarea=INT_MIN;
        int n=heights.size();
        vector<int> prev;
        prev=prevsmaller(heights);
        vector<int> next;
        next=nextsmaller(heights);
        for(int i=0;i<n;i++){
            int l=heights[i];
            if(next[i]==-1){
                next[i]=n;
            }
            int b=next[i]-prev[i]-1;
            int area=l*b;
            maxarea=max(maxarea,area);
        }
        return maxarea;
    }
};